from flask import Flask, render_template, request, jsonify, redirect, url_for
from flask_login import current_user, logout_user, login_required
from app import app, db, google_bp
from flask_dance.contrib.google import google
import difflib, re, csv
from app.forms import SymptomsForm  # Імпортуйте форму
from app.models import User, ChatHistory
from werkzeug.security import generate_password_hash, check_password_hash
# from markupsafe import escape
from html import escape
import bleach

# Stop words and synonyms
stop_words = [
    "маю", "є", "відчуваю", "виникає", "помічаю", "просто", "дуже", "сильно", "трохи", "майже", "іноді", "часто",
    "болить", "незначно", "може", "можливо", "схоже", "здається", "все-таки", "загалом", "типу", "наче", "якось",
    "дуже сильно", "досить", "такий", "такі", "таке", "ось", "ну", "наче", "наче б то", "якби", "скоріш за все",
    "точно", "трохи більше", "менше", "трохи менше", "майже завжди", "інколи", "час від часу", "в принципі",
    "в основному", "зазвичай", "в середньому", "переважно", "зрідка", "взагалі", "вже", "лише", "тільки", "або",
    "та", "і", "також", "крім того", "однак", "але", "проте", "хоча", "навіть", "не дуже", "не сильно", "нечасто",
    "надзвичайно", "важко", "незручно", "неприємно", "ледь помітно", "майже непомітно", "помітно", "ледь відчутно",
    "в більшості випадків", "у багатьох випадках", "у випадках", "як правило", "переважно", "рідко", "майже ніколи",
    "ніколи", "постійно", "знову", "знов", "повторно", "інший", "інші", "інше", "щось", "нічого", "якось",
    "що-небудь", "будь-що", "чому", "чого", "навіщо", "коли", "де", "тут", "там", "усюди", "скрізь", "абсолютно",
    "на 100%", "напевно", "точно", "здається", "ймовірно", "можливо", "імовірно", "кажуть", "хтось сказав",
    "відомо", "схожий", "схоже", "немає", "нема", "без", "з", "із", "при", "на", "до", "після", "як",
    "щоб", "для", "через", "протягом", "між", "поміж", "понад", "під", "над", "біля", "поруч", "завдяки", "внаслідок",
    "незважаючи", "незважаючи на", "хоча б", "будь ласка", "будь-який", "будь-яка", "будь-яке", "будь-які", "негайно",
    "раптом", "раптом стало", "потім", "згодом", "знову ж", "повторюється", "збільшується", "зменшується",
    "починається", "закінчується", "перестає", "продовжується", "періодично", "часом", "щосили", "можливо б",
    "напевно б", "можливо так", "не факт", "не впевнений", "впевнений", "точно так", "можливо так", "інколи так",
    "не знаю", "незрозуміло", "незрозуміле", "важко зрозуміти", "зрозуміло", "усе", "нічого нового", "нібито",
    "такий собі", "особливо", "швидше за все", "швидше всього", "можна", "неможливо", "інакше", "якщо", "чи ні",
    "чи так", "вже ні", "раніше так", "зараз ні", "тепер ні", "останнім часом", "частіше", "рідше", "майже завжди",
    "майже ні", "зараз", "тепер", "колись", "деколи", "в основному так", "не думаю", "гадка не маю", "напевно ні",
    "точно ні", "іноді ні", "точно так", "точно ні", "просто так", "нічого страшного", "нічого такого", "ніби як",
    "ніби то", "може бути", "мало ймовірно", "мало вірогідно", "не зовсім", "точно так", "ні за що", "ніколи",
    "завжди", "інколи", "частіше", "рідше", "щодня", "кожного дня", "знову ж таки", "постійно", "періодично",
    "часом", "все ж таки", "в результаті", "зрештою", "на жаль", "на щастя", "в цілому", "у загальному",
    "якийсь", "якась", "яке", "якісь", "нічого", "досить", "ніде", "ніяк", "зрозуміло", "без сумніву", "сумнівно"
]

synonyms = {
    "кашель": ["кашляю", "кашляти", "кашель", "покашлювання", "задушливий кашель"],
    "лихоманка": ["температура", "гарячка", "підвищена температура", "тремтіння від холоду", "висока температура"],
    "втома": ["слабкість", "недомагання", "виснаження", "хронічна втома"],
    "гарячка": ["лихоманка", "підвищена температура", "запалення"],
    "свербіж": ["сверблячка", "почухування", "свербіти", "свербіння"],
    "біль у горлі": ["дискомфорт у горлі", "запалення горла", "болить горло"],
    "полідипсія": ["спрага", "непомірна спрага", "постійне відчуття спраги"],
    "головний біль": ["мігрень", "болить голова", "напруга в голові"],
    "жовтяниця": ["жовтий колір шкіри", "жовтизна очей", "жовтушність"],
    "біль та обмеження руху в суглобах": ["болить суглоб", "важкість у рухах", "запалення суглобів"],
    "галюцинації": ["видіння", "помилкове сприйняття", "чую голоси"],
    "біль та набряк в суглобах": ["запалення суглобів", "суглоб набряк", "набряк суглобів"],
    "задишка": ["утруднене дихання", "дихати важко", "задихаюсь"],
    "зміни у структурі нігтів": ["викривлення нігтів", "ламкість нігтів", "деформація нігтів"],
    "зайва вага": ["надмірна вага", "ожиріння", "повнота"],
    "біль при сечовиділенні": ["болить під час сечовипускання", "дискомфорт при сечовиділенні", "печіння при сечовиділенні"],
    "дрож": ["тремтіння", "тремор", "неконтрольоване тремтіння"],
    "біль у животі": ["болить живіт", "шлунковий біль", "дискомфорт у животі"],
    "біль у грудях": ["дискомфорт у грудях", "тиснення в грудях", "грудний біль"],
    "пухлини": ["новоутворення", "утвір", "опухлість"],
    "анемія": ["недокрів’я", "низький гемоглобін", "недостаток заліза"],
    "нежить": ["соплі", "виділення з носа", "закладений ніс"],
    "свербіж в очах": ["очі сверблять", "дискомфорт в очах", "почервоніння очей"],
    "свербіж шкіри": ["шкіра свербить", "почухування", "свербіти"],
    "різке зниження артеріального тиску": ["гіпотонія", "низький тиск", "різке падіння тиску"],
    "прискорене серцебиття": ["тахікардія", "швидкий пульс", "серце б'ється швидко"],
    "утруднене дихання": ["важко дихати", "задишка", "нестача повітря"],
    "сухість шкіри": ["шкіра суха", "лущення шкіри", "тріщини на шкірі"],
    "червоні гланди": ["запалення гланд", "гланди болять", "почервоніння гланд"],
    "поліурія": ["часте сечовипускання", "зайва кількість сечі", "часті походи в туалет"],
    "підвищений артеріальний тиск": ["гіпертонія", "високий тиск", "тиск піднявся"],
    "втрата апетиту": ["немає апетиту", "відсутність апетиту", "не хочеться їсти"],
    "дезорієнтація": ["порушення орієнтації", "розгубленість", "не можу зорієнтуватись"],
    "свистіння в грудях": ["свистяче дихання", "шум у грудях", "свист у легенях"],
    "печія": ["горить у грудях", "рефлюкс", "кислотність"],
    "зміни в харчових звичках": ["нові звички в їжі", "зміна апетиту", "зміна смакових уподобань"],
    "часті відвідування туалету": ["часто в туалет", "часте сечовипускання", "зайві походи в туалет"],
    "м'язова слабкість": ["слабкість м'язів", "немає сили", "неможливість напружитись"],
    "діарея": ["рідкий стул", "пронос", "шлунок крутить"],
    "запаморочення": ["голова крутиться", "нестійкість", "відчуття падіння"],
    "збільшення лімфатичних вузлів": ["лімфовузли збільшені", "запалення лімфовузлів", "біль у лімфовузлах"],
    "слабкість": ["втома", "безсилля", "виснаження"],
    "закладеність носа": ["ніс не дихає", "перекритий ніс", "важко дихати носом"],
    "почервоніння очей": ["червоні очі", "запалення очей", "роздратовані очі"],
    "висипання": ["висипка", "почервоніння на шкірі", "плями на шкірі"],
    "втрата свідомості": ["непритомність", "обморок", "впав у непритомність"],
    "уповільнене серцебиття": ["брадикардія", "повільний пульс", "серце б'ється повільно"],
    "почервоніння": ["запалення", "червоний колір", "плями", "почервоніння шкіри"],
    "зміни настрою": ["перепади настрою", "емоційна нестабільність", "настрій змінюється"],
    "порушення координації": ["не можу втримати рівновагу", "розлад координації", "нестійкість"],
    "втрата ваги": ["схуднення", "зниження маси тіла", "втрата кілограмів"],
    "нудота": ["верне", "тошнота", "неприємне відчуття в шлунку"],
    "почервоніння ясен": ["запалення ясен", "ясна червоні", "болять ясна"],
    "набряк очей": ["припухлість очей", "набряклість повік", "запалення очей"],
    "перебої в роботі серця": ["аритмія", "нерівномірний пульс", "серце б'ється нерівно"],
    "чхання": ["постійне чхання", "не можу перестати чхати", "чхаю"],
    "сльозотеча": ["очі сльозяться", "зайві сльози", "сльози течуть"],
    "стиснення в грудях": ["тиск у грудях", "дискомфорт у грудях", "відчуття стиснення"],
    "порушення мови": ["важко говорити", "заплітається язик", "мовний розлад"],
}

treatment_recommendations = {
    "грип": "Відпочивайте, пийте багато рідини, приймайте жарознижувальні засоби.",
    "ангіна": "Полощіть горло соляним розчином, приймайте призначені лікарем антибіотики.",
    "алергія": "Уникайте алергенів, приймайте антигістамінні препарати.",
    "пневмонія": "Дотримуйтесь постільного режиму, пийте антибіотики за призначенням лікаря.",
    "застуда": "Пийте багато рідини, відпочивайте, використовуйте засоби від нежитю та болю в горлі.",
    "бронхіт": "Уникайте диму, пийте теплі напої, використовуйте інгалятори при потребі.",
    "астма": "Приймайте бронхолітики та контролюючі ліки, уникайте тригерів астми.",
    "вірусний гепатит": "Дотримуйтесь дієти, уникайте алкоголю, приймайте ліки для підтримки печінки.",
    "цукровий діабет 1 типу": "Регулярно вимірюйте рівень цукру в крові, приймайте інсулін, дотримуйтесь дієти.",
    "цукровий діабет 2 типу": "Слідкуйте за харчуванням, займайтеся фізичною активністю, контролюйте вагу.",
    "остеоартрит": "Займайтесь легкою фізкультурою, приймайте протизапальні препарати, використовуйте ортопедичні пристрої.",
    "артрит": "Приймайте протизапальні ліки, займайтесь фізіотерапією, зменшуйте навантаження на суглоби.",
    "гіпертонія": "Скоротіть вживання солі, займайтесь фізичною активністю, приймайте призначені ліки.",
    "депресія": "Поговоріть з психотерапевтом, дотримуйтесь режиму дня, приймайте антидепресанти за потреби.",
    "екзема": "Використовуйте зволожуючі креми, уникайте тригерів, при потребі приймайте кортикостероїди.",
    "грибкова інфекція шкіри": "Застосовуйте протигрибкові мазі, підтримуйте шкіру чистою та сухою.",
    "інсульт": "Пройдіть реабілітацію, приймайте препарати для розрідження крові, дотримуйтесь здорового способу життя.",
    "інфаркт міокарда": "Приймайте серцеві препарати, уникайте стресів, займайтесь реабілітацією.",
    "псоріаз": "Застосовуйте зволожуючі креми, використовуйте призначені лікарем мазі, уникайте стресів.",
    "системний червоний вовчак": "Дотримуйтесь дієти, уникайте сонця, приймайте імуносупресанти.",
    "остеопороз": "Приймайте кальцій та вітамін D, займайтесь легкою фізкультурою, уникайте падінь.",
    "туберкульоз": "Приймайте протитуберкульозні препарати за графіком, дотримуйтесь карантину.",
    "шизофренія": "Регулярно відвідуйте психіатра, приймайте антипсихотичні препарати, уникайте стресів.",
    "лімфома": "Дотримуйтесь графіку хіміотерапії чи радіотерапії, підтримуйте здоровий імунітет.",
    "лейкемія": "Пройдіть хіміотерапію, підтримуйте рівень гемоглобіну, дотримуйтесь рекомендацій лікаря.",
    "хронічна обструктивна хвороба легень (хозл)": "Приймайте бронхолітики, уникайте диму, займайтесь дихальною гімнастикою."
}



failed_attempts = {}

# Load disease data from CSV
def load_diseases_from_csv(file_path):
    diseases = {}
    with open(file_path, newline='', encoding='utf-8') as csvfile:
        reader = csv.reader(csvfile)
        for row in reader:
            disease = row[0]
            symptoms = [symptom.strip() for symptom in row[1:] if symptom.strip()]
            diseases[disease] = symptoms
    return diseases

# Clean and normalize symptoms
def clean_symptoms(symptom):
    for stop_word in stop_words:
        symptom = re.sub(r'\b' + stop_word + r'\b', '', symptom)
    print("\n\n")
    for key, syns in synonyms.items():
        for synonym in syns:
            symptom = re.sub(r'\b' + synonym + r'\b', key, symptom)
    symptom = re.sub(r'\s+', ' ', symptom).strip()
    return symptom

# import re

# # Clean and normalize symptoms
# def clean_symptoms(symptom):
#     # Створюємо шаблон для стоп-слів з урахуванням розділових знаків
#     stop_word_pattern = r'\b(' + '|'.join(re.escape(stop_word) for stop_word in stop_words) + r')\b'
#     # Замінюємо стоп-слова на пробіл
#     symptom = re.sub(stop_word_pattern, ' ', symptom)

#     # Видаляємо зайві пробіли та очищаємо текст
#     symptom = re.sub(r'[^\w\s,]', '', symptom)  # Видаляємо все, крім слів, пробілів і ком
#     symptom = re.sub(r'\s+', ' ', symptom).strip()  # Видаляємо зайві пробіли

#     # Розбиваємо симптоми за комами або пробілами
#     symptoms_list = re.split(r',\s*|\s+', symptom)

#     # Видаляємо порожні значення та дублікати
#     symptoms_list = list(filter(None, set(symptoms_list)))

#     # Заміна синонімів на ключові слова
#     normalized_symptoms = []
#     for s in symptoms_list:
#         for key, syns in synonyms.items():
#             if s in syns:
#                 s = key  # Замінюємо синонім на основне слово
#                 break
#         normalized_symptoms.append(s)  # Додаємо рядок, а не список

#     return normalized_symptoms





def get_diagnosis(user_input):
    diseases = load_diseases_from_csv('dataset2.csv')  
    user_input = escape(user_input)
    user_symptoms = [clean_symptoms(symptom.strip()) for symptom in user_input.split(',')]
    print(user_symptoms)
    
    diseases_ratings = {disease: 0 for disease in diseases.keys()}
    for user_symptom in user_symptoms:
        for disease, symptoms in diseases.items():
            if user_symptom in symptoms:
                diseases_ratings[disease] += 1

   
    max_matches = max(diseases_ratings.values(), default=0)
    top_diagnoses = [disease for disease, 
                     rating in diseases_ratings.items() 
                     if rating == max_matches 
                     and rating > 0]
    
    # Перевірка та обмеження кількості діагнозів до 3
    if len(top_diagnoses) > 3:
        top_diagnoses = top_diagnoses[:3]

    return ', '.join(top_diagnoses) if top_diagnoses else '''Вибачте, діагноз не може бути встановлений на основі введених даних. Уточніть симптоми або зверніться до лікаря'''

@app.route("/recommendation", methods=["POST"])
def get_recommendation():
    disease = request.form.get("disease")
    if disease in treatment_recommendations:
        recommendation = treatment_recommendations[disease]
        return jsonify({"recommendation": f"Рекомендації для лікування '{disease}': {recommendation}"})
    else:
        return jsonify({"recommendation": "Вибачте, рекомендації для цієї хвороби недоступні."})


@app.route('/')
def index():
    return render_template('index.html')

@app.route("/login/google")
def login_with_google():
    if current_user.is_authenticated and current_user.access_token:
        # Використовуємо збережений токен
        google_bp.session.token = {"access_token": current_user.access_token}
        return redirect(url_for("home"))  # Перенаправляємо користувача на головну

    return redirect(url_for("google.login"))

@app.route('/login_failed', methods=['POST'])
def login_failed():
    email = request.form.get('email')
    failed_attempts[email] = failed_attempts.get(email, 0) + 1

    if failed_attempts[email] > 3:
        app.logger.warning(f"Multiple failed login attempts detected for email {email}.")

    return render_template('login_failed.html')

@app.route('/diagnose', methods=['POST'])
def diagnose():
    # Отримуємо повідомлення користувача
    symptoms_or_message = request.form.get('symptoms')
    cleaned_message = bleach.clean(symptoms_or_message)
    cleaned_message = escape(cleaned_message)
    app.logger.info(f"Message submitted: {cleaned_message}")

    # Ініціалізуємо змінну для відповіді
    response = None

    # Логіка для обробки різних повідомлень
    if "так" == cleaned_message.lower():
        response = "Напишіть назву хвороби зі списку для отримання рекомендацій."
    elif "ні" == cleaned_message.lower():
        response = "Добре, якщо потрібна допомога, пишіть!"
    elif cleaned_message.lower() in treatment_recommendations.keys():
        recommendation = treatment_recommendations.get(cleaned_message.lower(), "Рекомендації для цієї хвороби недоступні.")
        response = f"{recommendation} Зверніть увагу: ці рекомендації є лише довідковими. Обов'язково проконсультуйтеся з лікарем!"
    else:
        response = get_diagnosis(cleaned_message)

    # Збереження повідомлення та відповіді в базу даних
    if current_user.is_authenticated:
        user_id = current_user.id
        app.logger.info(f"User ID: {user_id} is authenticated, saving data...")
        chat_record = ChatHistory(
            user_id=user_id,
            message=cleaned_message,
            diagnosis=response  # Зберігаємо відповідь
        )
        try:
            db.session.add(chat_record)
            db.session.commit()
            app.logger.info(f"Data saved for user ID: {user_id}")
        except Exception as e:
            app.logger.error(f"Error saving data for user ID: {user_id}: {e}")
            db.session.rollback()
    else:
        app.logger.warning("User is not authenticated, data not saved.")

    # Повертаємо відповідь чату
    return jsonify({'diagnosis': response})



# @app.route("/api/check_login")
# def check_login():
#     return jsonify(logged_in=current_user.is_authenticated)
@app.route('/api/check_login', methods=['GET'])
def check_login():
    if current_user.is_authenticated:
        user_id = current_user.id
        # Отримуємо історію повідомлень
        history = ChatHistory.query.filter_by(user_id=user_id).order_by(ChatHistory.timestamp).all()
        history_data = [
            {
                "message": record.message,
                "diagnosis": record.diagnosis,
                "timestamp": record.timestamp
            } for record in history
        ]
        return jsonify({"logged_in": True, "history": history_data})
    return jsonify({"logged_in": False, "history": []})


@app.route("/logout", methods=["POST"])
def logout():
    if current_user.is_authenticated:
        username = current_user.username
        user_id = current_user.id
        logout_user()
        # Логування спроби виходу
        app.logger.info(f"User {username} (ID: {user_id}) logged out.")
        return """
        <script>
            window.close();
        </script>
        """
    else:
        app.logger.warning("Attempted logout without an authenticated session.")
        return """
        <script>
            window.close();
        </script>
        """

@app.route('/get_history', methods=['GET'])
def get_history():
    if current_user.is_authenticated:
        user_id = current_user.id
        # Отримуємо всі повідомлення і діагнози користувача, впорядковані за часом
        history = ChatHistory.query.filter_by(user_id=user_id).order_by(ChatHistory.timestamp).all()
        # Перетворюємо дані в формат JSON для відправки на клієнт
        return jsonify([
            {
                "message": record.message,
                "diagnosis": record.diagnosis,
                "timestamp": record.timestamp
            } for record in history
        ])
    return jsonify([])  # Повертаємо порожній список, якщо користувач не залогінений

@app.route('/clear_chat', methods=['POST'])
@login_required
def clear_chat():
    try:
        # Видалення чату з бази даних
        ChatHistory.query.filter_by(user_id=current_user.id).delete()
        db.session.commit()
        return jsonify({"message": "Чат очищено"}), 200
    except Exception as e:
        db.session.rollback()
        app.logger.error(f"Помилка при очищенні чату для користувача {current_user.id}: {e}")
        return jsonify({"message": "Помилка при очищенні чату"}), 500

@app.route("/api/user_info")
def user_info():
    if current_user.is_authenticated:
        # Повертаємо ім'я користувача та URL аватарки
        return jsonify({
            "username": current_user.username,
            "avatar_url": current_user.avatar_url  # Замініть на відповідне поле з URL аватарки
        })
    else:
        return jsonify({"error": "User not authenticated"}), 401


